name: Deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache and install dependencies
        uses: ./.github/custom-actions/cache-and-install-deps
        with:
          caching: false # Disable caching for linting (Just to try it out)
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache and install dependencies
        uses: ./.github/custom-actions/cache-and-install-deps
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Cache and install dependencies
        uses: ./.github/custom-actions/cache-and-install-deps
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist
  deploy:
    permissions:
      contents: read
      id-token: write
    environment: production
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Get AWS Permissions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::047471738631:role/Github-s3-access
          aws-region: us-east-1
      - name: Deploy site
        id: deploy
        uses: ./.github/custom-actions/deploy-s3-with-docker
        with:
          s3-bucket: ${{ secrets.S3_BUCKET }}
          dist-folder: ./dist
      - name: Output website URL
        run: |
          echo "Website URL: ${{ steps.deploy.outputs.website-url }}"
